import struct
import json
from ctypes import *
from enum import IntEnum

from ctypes import *


class PStructure(Structure):
    _pack_ = 1
    _fields_ = []

    def pack(self):
        return string_at(addressof(self), sizeof(self))

    def unpack(self, buf):
        obj = self
        memmove(addressof(obj), buf, sizeof(obj))
        return obj

    def __to_dict(self, obj):
        d = dict((field[0], getattr(obj, field[0])) for field in obj._fields_)
        for field in d:
            att = d[field]
            if isinstance(att, int):
                pass
            elif isinstance(att, bytes):
                d[field] = bytes.decode(d[field], encoding="utf-8", errors="ignore")
            elif isinstance(att, Array):
                if att._type_ is c_ubyte:
                    d[field] = "".join([f"{x:02x}" for x in d[field]])
                else:
                    d[field] = [self.__to_dict(a) for a in att]
            else:
                d[field] = self.__to_dict(att)
        return d

    def __post_process(self, d):
        return d

    def __str__(self):
        return json.dumps(self.__post_process(self.__to_dict(self)), indent=4)


class HCI_OPCODE_OGF(IntEnum):
    HCI_LKCTLCMD = 0x01 << 10
    HCI_LKPOLCMD = 0x02 << 10
    HCI_CTLBBCMD = 0x03 << 10
    HCI_INFCMD = 0x04 << 10
    HCI_STATCMD = 0x05 << 10
    HCI_TESTCMD = 0x06 << 10
    HCI_LECTLCMD = 0x08 << 10
    HCI_VSCMD = 0x3F << 10


class HCI_OPCODE(IntEnum):
    # Link Control Commands
    HCI_CMD_INQUIRY = 0x0001 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_INQUIRY_CANCEL = 0x0002 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_PERIODIC_INQUIRY_MODE = 0x0003 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_EXIT_PERIODIC_INQUIRY_MODE = 0x0004 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_CREATE_CONNECTION = 0x0005 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_DISCONNECT = 0x0006 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_CREATE_CONNECTION_CANCEL = 0x0008 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_ACCEPT_CONNECTION_REQUEST = 0x0009 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_REJECT_CONNECTION_REQUEST = 0x000A | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_LINK_KEY_REQUEST_REPLY = 0x000B | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_LINK_KEY_REQUEST_NEGATIVE_REPLY = 0x000C | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_PIN_CODE_REQUEST_REPLY = 0x000D | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_PIN_CODE_REQUEST_NEGATIVE_REPLY = 0x000E | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_CHANGE_CONNECTION_PACKET_TYPE = 0x000F | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_AUTHENTICATION_REQUESTED = 0x0011 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_SET_CONNECTION_ENCRYPTION = 0x0013 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_CHANGE_CONNECTION_LINK_KEY = 0x0015 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_MASTER_LINK_KEY = 0x0017 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_REMOTE_NAME_REQUEST = 0x0019 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_REMOTE_NAME_REQUEST_CANCEL = 0x001A | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_READ_REMOTE_SUPPORTED_FEATURES = 0x001B | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_READ_REMOTE_EXTENDED_FEATURES = 0x001C | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_READ_REMOTE_VERSION_INFORMATION = 0x001D | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_READ_CLOCK_OFFSET = 0x001F | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_READ_LMP_HANDLE = 0x0020 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_SETUP_SYNCHRONOUS_CONNECTION = 0x0028 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST = 0x0029 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_REJECT_SYNCHRONOUS_CONNECTION_REQUEST = 0x002A | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_IO_CAPABILITY_REQUEST_REPLY = 0x002B | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_USER_CONFIRMATION_REQUEST_REPLY = 0x002C | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_USER_CONFIRMATION_REQUEST_NEGATIVE_REPLY = (
        0x002D | HCI_OPCODE_OGF.HCI_LKCTLCMD
    )
    HCI_CMD_USER_PASSKEY_REQUEST_REPLY = 0x002E | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_USER_PASSKEY_REQUEST_NEGATIVE_REPLY = 0x002F | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_REMOTE_OOB_DATA_REQUEST_REPLY = 0x0030 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_REMOTE_OOB_DATA_REQUEST_NEGATIVE_REPLY = (
        0x0033 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    )
    HCI_CMD_IO_CAPABILITY_REQUEST_NEGATIVE_REPLY = 0x0034 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_CREATE_PHYSICAL_LINK = 0x0035 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_ACCEPT_PHYSICAL_LINK = 0x0036 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_DISCONNECT_PHYSICAL_LINK = 0x0037 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_CREATE_LOGICAL_LINK = 0x0038 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_ACCEPT_LOGICAL_LINK = 0x0039 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_DISCONNECT_LOGICAL_LINK = 0x003A | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_LOGICAL_LINK_CANCEL = 0x003B | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_FLOW_SPEC_MODIFY = 0x003C | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_ENHANCED_SETUP_SYNCHRONOUS_CONNECTION = 0x003D | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_ENHANCED_ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST = (
        0x003E | HCI_OPCODE_OGF.HCI_LKCTLCMD
    )
    HCI_CMD_TRUNCATED_PAGE = 0x003F | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_TRUNCATED_PAGE_CANCEL = 0x0040 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_SET_CONNECTIONLESS_PERIPHERAL_BROADCAST = (
        0x0041 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    )
    HCI_CMD_SET_CONNECTIONLESS_PERIPHERAL_BROADCAST_RECEIVE = (
        0x0042 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    )
    HCI_CMD_START_SYNCHRONIZATION_TRAIN = 0x0043 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_RECEIVE_SYNCHRONIZATION_TRAIN = 0x0044 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    HCI_CMD_REMOTE_OOB_EXTENDED_DATA_REQUEST_REPLY = (
        0x0045 | HCI_OPCODE_OGF.HCI_LKCTLCMD
    )

    # Link Policy Commands
    HCI_CMD_HOLD_MODE = 0x0001 | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_SNIFF_MODE = 0x0003 | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_EXIT_SNIFF_MODE = 0x0004 | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_PARK_STATE = 0x0005 | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_EXIT_PARK_STATE = 0x0006 | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_QOS_SETUP = 0x0007 | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_ROLE_DISCOVERY = 0x0009 | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_SWITCH_ROLE = 0x000B | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_READ_LINK_POLICY_SETTINGS = 0x000C | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_WRITE_LINK_POLICY_SETTINGS = 0x000D | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_READ_DEFAULT_LINK_POLICY_SETTINGS = 0x000E | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_WRITE_DEFAULT_LINK_POLICY_SETTINGS = 0x000F | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_FLOW_SPECIFICATION = 0x0010 | HCI_OPCODE_OGF.HCI_LKPOLCMD
    HCI_CMD_SNIFF_SUBRATING = 0x0011 | HCI_OPCODE_OGF.HCI_LKPOLCMD

    # Controller & Baseband Commands
    HCI_CMD_SET_EVENT_MASK = 0x0001 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_RESET = 0x0003 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_EVENT_FILTER = 0x0005 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_FLUSH = 0x0008 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_PIN_TYPE = 0x0009 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_PIN_TYPE = 0x000A | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_CREATE_NEW_UNIT_KEY = 0x000B | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_STORED_LINK_KEY = 0x000D | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_STORED_LINK_KEY = 0x0011 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_DELETE_STORED_LINK_KEY = 0x0012 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_LOCAL_NAME = 0x0013 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_LOCAL_NAME = 0x0014 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_CONNECTION_ACCEPT_TIMEOUT = 0x0015 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_CONNECTION_ACCEPT_TIMEOUT = 0x0016 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_PAGE_TIMEOUT = 0x0017 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_PAGE_TIMEOUT = 0x0018 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_SCAN_ENABLE = 0x0019 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_SCAN_ENABLE = 0x001A | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_PAGE_SCAN_ACTIVITY = 0x001B | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_PAGE_SCAN_ACTIVITY = 0x001C | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_INQUIRY_SCAN_ACTIVITY = 0x001E | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_AUTHENTICATION_ENABLE = 0x001F | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_AUTHENTICATION_ENABLE = 0x0020 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_CLASS_OF_DEVICE = 0x0023 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_CLASS_OF_DEVICE = 0x0024 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_VOICE_SETTING = 0x0025 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_VOICE_SETTING = 0x0026 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_AUTOMATIC_FLUSH_TIMEOUT = 0x0027 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_AUTOMATIC_FLUSH_TIMEOUT = 0x0028 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_NUM_BROADCAST_RETRANSMISSIONS = 0x0029 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_NUM_BROADCAST_RETRANSMISSIONS = 0x002A | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_HOLD_MODE_ACTIVITY = 0x002B | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_HOLD_MODE_ACTIVITY = 0x002C | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_TRANSMIT_POWER_LEVEL = 0x002D | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_SYNCHRONOUS_FLOW_CONTROL_ENABLE = 0x002E | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_SYNCHRONOUS_FLOW_CONTROL_ENABLE = 0x002F | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_CONTROLLER_TO_HOST_FLOW_CONTROL = 0x0031 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_HOST_BUFFER_SIZE = 0x0033 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_HOST_NUMBER_OF_COMPLETED_PACKETS = 0x0035 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_LINK_SUPERVISION_TIMEOUT = 0x0036 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_LINK_SUPERVISION_TIMEOUT = 0x0037 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_NUMBER_OF_SUPPORTED_IAC = 0x0038 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_CURRENT_IAC_LAP = 0x0039 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_CURRENT_IAC_LAP = 0x003A | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_AFH_HOST_CHANNEL_CLASSIFICATION = 0x003F | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_INQUIRY_SCAN_TYPE = 0x0042 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_INQUIRY_SCAN_TYPE = 0x0043 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_INQUIRY_MODE = 0x0044 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_INQUIRY_MODE = 0x0045 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_PAGE_SCAN_TYPE = 0x0046 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_PAGE_SCAN_TYPE = 0x0047 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_AFH_CHANNEL_ASSESSMENT_MODE = 0x0048 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_AFH_CHANNEL_ASSESSMENT_MODE = 0x0049 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_EXTENDED_INQUIRY_RESPONSE = 0x0051 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_EXTENDED_INQUIRY_RESPONSE = 0x0052 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_REFRESH_ENCRYPTION_KEY = 0x0053 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_SIMPLE_PAIRING_MODE = 0x0055 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_SIMPLE_PAIRING_MODE = 0x0056 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_LOCAL_OOB_DATA = 0x0057 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_INQUIRY_RESPONSE_TRANSMIT_POWER_LEVEL = (
        0x0058 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    )
    HCI_CMD_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL = 0x0059 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_DEFAULT_ERRONEOUS_DATA_REPORTING = 0x005A | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_DEFAULT_ERRONEOUS_DATA_REPORTING = (
        0x005B | HCI_OPCODE_OGF.HCI_CTLBBCMD
    )
    HCI_CMD_ENHANCED_FLUSH = 0x005F | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SEND_KEYPRESS_NOTIFICATION = 0x0060 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_LOGICAL_LINK_ACCEPT_TIMEOUT = 0x0061 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_LOGICAL_LINK_ACCEPT_TIMEOUT = 0x0062 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_EVENT_MASK_PAGE_2 = 0x0063 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_LOCATION_DATA = 0x0064 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_LOCATION_DATA = 0x0065 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_FLOW_CONTROL_MODE = 0x0066 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_FLOW_CONTROL_MODE = 0x0067 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_ENHANCED_TRANSMIT_POWER_LEVEL = 0x0068 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_BEST_EFFORT_FLUSH_TIMEOUT = 0x0069 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_BEST_EFFORT_FLUSH_TIMEOUT = 0x006A | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SHORT_RANGE_MODE = 0x006B | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_LE_HOST_SUPPORT = 0x006C | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_LE_HOST_SUPPORT = 0x006D | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_MWS_CHANNEL_PARAMETERS = 0x006E | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_EXTERNAL_FRAME_CONFIGURATION = 0x006F | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_MWS_SIGNALING = 0x0070 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_MWS_TRANSPORT_LAYER = 0x0071 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_MWS_SCAN_FREQUENCY_TABLE = 0x0072 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_MWS_PATTERN_CONFIGURATION = 0x0073 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_RESERVED_LT_ADDR = 0x0074 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_DELETE_RESERVED_LT_ADDR = 0x0075 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_SET_CONNECTIONLESS_PERIPHERAL_BROADCAST_DATA = (
        0x0076 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    )
    HCI_CMD_READ_SYNCHRONIZATION_TRAIN_PARAMETERS = 0x0077 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_SYNCHRONIZATION_TRAIN_PARAMETERS = (
        0x0078 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    )
    HCI_CMD_READ_SECURE_CONNECTIONS_HOST_SUPPORT = 0x0079 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_SECURE_CONNECTIONS_HOST_SUPPORT = 0x007A | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_AUTHENTICATED_PAYLOAD_TIMEOUT = 0x007B | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_AUTHENTICATED_PAYLOAD_TIMEOUT = 0x007C | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_LOCAL_OOB_EXTENDED_DATA = 0x007D | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_EXTENDED_PAGE_TIMEOUT = 0x007E | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_EXTENDED_PAGE_TIMEOUT = 0x007F | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_READ_EXTENDED_INQUIRY_LENGTH = 0x0080 | HCI_OPCODE_OGF.HCI_CTLBBCMD
    HCI_CMD_WRITE_EXTENDED_INQUIRY_LENGTH = 0x0081 | HCI_OPCODE_OGF.HCI_CTLBBCMD

    # Informational Parameters
    HCI_CMD_READ_LOCAL_VERSION_INFO = 0x0001 | HCI_OPCODE_OGF.HCI_INFCMD
    HCI_CMD_READ_LOCAL_SUPPORTED_COMMANDS = 0x0002 | HCI_OPCODE_OGF.HCI_INFCMD
    HCI_CMD_READ_LOCAL_SUPPORTED_FEATURES = 0x0003 | HCI_OPCODE_OGF.HCI_INFCMD
    HCI_CMD_READ_LOCAL_EXTENDED_FEATURES = 0x0004 | HCI_OPCODE_OGF.HCI_INFCMD
    HCI_CMD_READ_BUFFER_SIZE = 0x0005 | HCI_OPCODE_OGF.HCI_INFCMD
    HCI_CMD_READ_BD_ADDR = 0x0009 | HCI_OPCODE_OGF.HCI_INFCMD
    HCI_CMD_READ_DATA_BLOCK_SIZE = 0x000A | HCI_OPCODE_OGF.HCI_INFCMD
    HCI_CMD_READ_LOCAL_SUPPORTED_CODECS = 0x000B | HCI_OPCODE_OGF.HCI_INFCMD

    # Status Parameters
    HCI_CMD_READ_FAILED_CONTACT_COUNTER = 0x0001 | HCI_OPCODE_OGF.HCI_STATCMD
    HCI_CMD_RESET_FAILED_CONTACT_COUNTER = 0x0002 | HCI_OPCODE_OGF.HCI_STATCMD
    HCI_CMD_READ_LINK_QUALITY = 0x0003 | HCI_OPCODE_OGF.HCI_STATCMD
    HCI_CMD_READ_RSSI = 0x0005 | HCI_OPCODE_OGF.HCI_STATCMD
    HCI_CMD_READ_AFH_CHANNEL_MAP = 0x0006 | HCI_OPCODE_OGF.HCI_STATCMD
    HCI_CMD_READ_CLOCK = 0x0007 | HCI_OPCODE_OGF.HCI_STATCMD
    HCI_CMD_READ_ENCRYPTION_KEY_SIZE = 0x0008 | HCI_OPCODE_OGF.HCI_STATCMD
    HCI_CMD_READ_LOCAL_AMP_INFO = 0x0009 | HCI_OPCODE_OGF.HCI_STATCMD
    HCI_CMD_READ_LOCAL_AMP_ASSOC = 0x000A | HCI_OPCODE_OGF.HCI_STATCMD
    HCI_CMD_WRITE_REMOTE_AMP_ASSOC = 0x000B | HCI_OPCODE_OGF.HCI_STATCMD
    HCI_CMD_GET_MWS_TRANSPORT_LAYER_CONFIGURATION = 0x000C | HCI_OPCODE_OGF.HCI_STATCMD
    HCI_CMD_SET_TRIGGERED_CLOCK_CAPTURE = 0x000D | HCI_OPCODE_OGF.HCI_STATCMD

    # Testing Commands
    HCI_CMD_READ_LOOPBACK_MODE = 0x0001 | HCI_OPCODE_OGF.HCI_TESTCMD
    HCI_CMD_WRITE_LOOPBACK_MODE = 0x0002 | HCI_OPCODE_OGF.HCI_TESTCMD
    HCI_CMD_ENABLE_DEVICE_UNDER_TEST_MODE = 0x0003 | HCI_OPCODE_OGF.HCI_TESTCMD
    HCI_CMD_WRITE_SIMPLE_PAIRING_DEBUG_MODE = 0x0004 | HCI_OPCODE_OGF.HCI_TESTCMD
    HCI_CMD_WRITE_SECURE_CONNECTIONS_TEST_MODE = 0x000A | HCI_OPCODE_OGF.HCI_TESTCMD

    # LE Controller Commands
    HCI_CMD_LE_SET_EVENT_MASK = 0x0001 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_BUFFER_SIZE = 0x0002 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_LOCAL_SUPPORTED_FEATURES = 0x0003 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_RANDOM_ADDRESS = 0x0005 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_ADVERTISING_PARAMETERS = 0x0006 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_ADVERTISING_CHANNEL_TX_POWER = 0x0007 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_ADVERTISING_DATA = 0x0008 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_SCAN_RESPONSE_DATA = 0x0009 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_ADVERTISING_ENABLE = 0x000A | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_SCAN_PARAMETERS = 0x000B | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_SCAN_ENABLE = 0x000C | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_CREATE_CONNECTION = 0x000D | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_CREATE_CONNECTION_CANCEL = 0x000E | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_WHITE_LIST_SIZE = 0x000F | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_CLEAR_WHITE_LIST = 0x0010 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_ADD_DEVICE_TO_WHITE_LIST = 0x0011 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_REMOVE_DEVICE_FROM_WHITE_LIST = 0x0012 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_CONNECTION_UPDATE = 0x0013 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_HOST_CHANNEL_CLASSIFICATION = 0x0014 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_CHANNEL_MAP = 0x0015 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_REMOTE_FEATURES = 0x0016 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_ENCRYPT = 0x0017 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_RAND = 0x0018 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_START_ENCRYPTION = 0x0019 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_LONG_TERM_KEY_REQUEST_REPLY = 0x001A | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_LONG_TERM_KEY_REQUEST_NEGATIVE_REPLY = (
        0x001B | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_READ_SUPPORTED_STATES = 0x001C | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_RECEIVER_TEST = 0x001D | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_TRANSMITTER_TEST = 0x001E | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_TEST_END = 0x001F | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_REMOTE_CONNECTION_PARAMETER_REQUEST_REPLY = (
        0x0020 | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_REMOTE_CONNECTION_PARAMETER_REQUEST_NEGATIVE_REPLY = (
        0x0021 | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_SET_DATA_LENGTH = 0x0022 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_SUGGESTED_DEFAULT_DATA_LENGTH = 0x0023 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_WRITE_SUGGESTED_DEFAULT_DATA_LENGTH = (
        0x0024 | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_READ_LOCAL_P256_PUBLIC_KEY = 0x0025 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_GENERATE_DHKEY = 0x0026 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_ADD_DEVICE_TO_RESOLVING_LIST = 0x0027 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_REMOVE_DEVICE_FROM_RESOLVING_LIST = 0x0028 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_CLEAR_RESOLVING_LIST = 0x0029 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_RESOLVING_LIST_SIZE = 0x002A | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_PEER_RESOLVABLE_ADDRESS = 0x002B | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_LOCAL_RESOLVABLE_ADDRESS = 0x002C | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_ADDRESS_RESOLUTION_ENABLE = 0x002D | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_RESOLVABLE_PRIVATE_ADDRESS_TIMEOUT = (
        0x002E | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_READ_MAXIMUM_DATA_LENGTH = 0x002F | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_PHY = 0x0030 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_DEFAULT_PHY = 0x0031 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_PHY = 0x0032 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_ENHANCED_RECEIVER_TEST = 0x0033 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_ENHANCED_TRANSMITTER_TEST = 0x0034 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_ADVERTISING_SET_RANDOM_ADDRESS = 0x0035 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_EXTENDED_ADVERTISING_PARAMETERS = (
        0x0036 | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_SET_EXTENDED_ADVERTISING_DATA = 0x0037 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_EXTENDED_SCAN_RESPONSE_DATA = 0x0038 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_EXTENDED_ADVERTISING_ENABLE = 0x0039 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_MAXIMUM_ADVERTISING_DATA_LENGTH = (
        0x003A | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_READ_NUMBER_OF_SUPPORTED_ADVERTISING_SETS = (
        0x003B | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_REMOVE_ADVERTISING_SET = 0x003C | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_CLEAR_ADVERTISING_SETS = 0x003D | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_PERIODIC_ADVERTISING_PARAMETERS = (
        0x003E | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_SET_PERIODIC_ADVERTISING_DATA = 0x003F | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_PERIODIC_ADVERTISING_ENABLE = 0x0040 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_EXTENDED_SCAN_PARAMETERS = 0x0041 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_EXTENDED_SCAN_ENABLE = 0x0042 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_EXTENDED_CREATE_CONNECTION = 0x0043 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_PERIODIC_ADVERTISING_CREATE_SYNC = 0x0044 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_PERIODIC_ADVERTISING_CREATE_SYNC_CANCEL = (
        0x0045 | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_PERIODIC_ADVERTISING_TERMINATE_SYNC = (
        0x0046 | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_ADD_DEVICE_TO_PERIODIC_ADVERTISER_LIST = (
        0x0047 | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_REMOVE_DEVICE_FROM_PERIODIC_ADVERTISER_LIST = (
        0x0048 | HCI_OPCODE_OGF.HCI_LECTLCMD
    )
    HCI_CMD_LE_CLEAR_PERIODIC_ADVERTISER_LIST = 0x0049 | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_PERIODIC_ADVERTISER_LIST_SIZE = 0x004A | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_TRANSMIT_POWER = 0x004B | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_READ_RF_PATH_COMPENSATION = 0x004C | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_WRITE_RF_PATH_COMPENSATION = 0x004D | HCI_OPCODE_OGF.HCI_LECTLCMD
    HCI_CMD_LE_SET_PRIVACY_MODE = 0x004E | HCI_OPCODE_OGF.HCI_LECTLCMD


# class HciCmd:
#     """
#     HCI command
#     """

#     def __init__(self):
#         """
#         HCI command
#         |OpFode(OCF|OGF)|Parameter Total Length|Parameter|
#         """
#         self.pkt_type = 0x01
#         self.opcode = 0
#         self.len = 0
#         self.param = bytes()

#     def pack(self):
#         """
#         convert to bytes
#         """
#         self.len = len(self.param)
#         return struct.pack("<HB", self.opcode, self.len) + self.param

#     def __str__(self):
#         return f"hci cmd opcode: 0x{self.opcode:04X}, len: {self.len}, param: {self.param.hex()}"


class HciCmdBase(PStructure):
    """
    HCI command
    |OpFode(OCF|OGF)|Parameter Total Length|Parameter|
    """

    def __init__(self):
        super().__init__()
        self.opcode = 0
        self.length = 0

    def pack(self):
        self.length = sizeof(self) - 3
        return string_at(addressof(self), sizeof(self))

    def __str__(self):
        try:
            opcode_name = HCI_OPCODE(self.opcode).name
        except ValueError:
            opcode_name = "UNKNOWN"
        return (
            f"hci cmd opcode: {opcode_name} (0x{self.opcode:04X}), len: {self.length}"
        )


class HciCmd(HciCmdBase):
    """
    HCI command
    |OpFode(OCF|OGF)|Parameter Total Length|Parameter|
    """

    _fields_ = [
        ("opcode", c_uint16),
        ("length", c_uint8),
    ]


class HciCmdReset(HciCmd):
    """
    HCI reset command
    """

    def __init__(self):
        super().__init__()
        self.opcode = HCI_OPCODE.HCI_CMD_RESET


class HciCmdReadLocalName(HciCmd):
    """
    HCI read local name command
    """

    def __init__(self):
        super().__init__()
        self.opcode = HCI_OPCODE.HCI_CMD_READ_LOCAL_NAME


class HciCmdReadBdAddr(HciCmd):
    """
    HCI read bd addr command
    """

    def __init__(self):
        super().__init__()
        self.opcode = HCI_OPCODE.HCI_CMD_READ_BD_ADDR


class HciCmdSetEventMask(HciCmdBase):
    """
    HCI set event mask command
    """

    _fields_ = HciCmd._fields_ + [
        ("event_mask", c_uint64),
        # ("inquiry_complete_event", c_uint64, 1),
        # ("inquiry_result_event", c_uint64, 1),
        # ("connection_complete_event", c_uint64, 1),
        # ("connection_request_event", c_uint64, 1),
        # ("disconnection_complete_event", c_uint64, 1),
        # ("authentication_complete_event", c_uint64, 1),
        # ("remote_name_request_event", c_uint64, 1),
        # ("remote_name_request_complete_event", c_uint64, 1),
        # ("link_key_request_event", c_uint64, 1),
        # ("link_key_notification_event", c_uint64, 1),
    ]

    def __init__(self, **kwargs):
        super().__init__()
        # for field in self._fields_:
        #     setattr(self, field[0], 0)  # default set off
        # for key, value in kwargs.items():
        #     if hasattr(self, key):
        #         setattr(self, key, value)
        self.opcode = HCI_OPCODE.HCI_CMD_SET_EVENT_MASK
        self.event_mask = 0x3FFFFFFFFFFFFFFF

    def __str__(self):
        return super().__str__() + f", event_mask: 0x{self.event_mask:016X}"


class HciCmdReadBufferSize(HciCmd):
    """
    HCI read buffer size command
    """

    def __init__(self):
        super().__init__()
        self.opcode = HCI_OPCODE.HCI_CMD_READ_BUFFER_SIZE


class HciCmdReadLocalVersionInfo(HciCmd):
    """
    HCI read local version info command
    """

    def __init__(self):
        super().__init__()
        self.opcode = HCI_OPCODE.HCI_CMD_READ_LOCAL_VERSION_INFO


class HciCmdReadLocalSupportedCommands(HciCmd):
    """
    HCI read local supported commands command
    """

    def __init__(self):
        super().__init__()
        self.opcode = HCI_OPCODE.HCI_CMD_READ_LOCAL_SUPPORTED_COMMANDS


class HciCmdReadLocalSupportedFeatures(HciCmd):
    """
    HCI read local supported features command
    """

    def __init__(self):
        super().__init__()
        self.opcode = HCI_OPCODE.HCI_CMD_READ_LOCAL_SUPPORTED_FEATURES


class HciCmdReadLocalSupportedCodecs(HciCmd):
    """
    HCI read local supported codecs command
    """

    def __init__(self):
        super().__init__()
        self.opcode = HCI_OPCODE.HCI_CMD_READ_LOCAL_SUPPORTED_CODECS
